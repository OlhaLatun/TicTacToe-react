{"version":3,"sources":["Modal/index.js","utils/helper.js","Game/index.js","App/index.js","index.js"],"names":["Modal","props","useState","isValid","setIsValid","className","onSubmit","e","preventDefault","player1","target","value","player2","setPlayers","setModalStatus","htmlFor","id","type","placeholder","idxPattern","calculateWinner","squares","winCombinations","i","length","a","b","c","indexOf","Game","players","Array","fill","setSquares","isXnext","setIsXnext","score1","setScore1","score2","setScore2","step","setStep","status","setStatus","xO","winner","getWinnerName","useEffect","prevState","resetBoard","onClick","map","el","disabled","toUpperCase","renderResult","App","modalStatus","p1","p2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7b1ea8.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport './Modal.scss'\n\nexport default function Modal(props) {\n\n    const [isValid, setIsValid] = useState(false)\n\n  const handleSubmit = (e) => {\n      e.preventDefault()\n      const player1 = e.target[0].value\n      const player2 = e.target[1].value\n\n      if (player1 !== '' && player2 !== '') {\n        props.setPlayers(player1, player2)\n        props.setModalStatus()\n      } else {\n        setIsValid(true)\n      }  \n  }\n    return (\n        <div className='modal'>\n            <form className='modal-form' onSubmit={handleSubmit}>\n            <label htmlFor='player1'> Enter \"Player 1\" </label>\n            <input className='modal-input'\n                id='player1' \n                type='text'\n                placeholder='Enter the name' />\n            <label htmlFor='player2'> Enter \"Player 2\" </label> \n            <input className='modal-input'\n                id='player2' \n                type='text'\n                placeholder='Enter the name' />\n                {isValid ? <span className='warn-message'>You forgot to enter your name</span> : null}\n            <button className='modal-submit' type='submit' >Save</button>\n            </form>\n        </div>\n    )\n}","let idxPattern \n\nfunction calculateWinner(squares) {\n    const winCombinations = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n\n    for (let i = 0; i < winCombinations.length; i++) {\n      const [a, b, c] = winCombinations[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        idxPattern = winCombinations.indexOf(winCombinations[i])\n        return squares[a];\n      }\n    }\n    return null;\n  }\n \n\n  export {calculateWinner, idxPattern}\n\n","import React, { useEffect, useState } from 'react'\nimport './Game.scss'\nimport '../utils/strikePatterns.scss'\nimport {calculateWinner, idxPattern} from '../utils/helper'\n\nexport default function Game({players})  {\n    \n const [squares, setSquares] = useState(Array(9).fill(null))\n const [isXnext, setIsXnext] = useState(true)\n const [score1, setScore1] = useState(0)\n const [score2, setScore2] = useState(0)\n const [step, setStep] = useState(0)\n const [status, setStatus] = useState('')\n\n const [player1, player2] = players\n const xO = isXnext ? 'X' : 'O'\n const winner = getWinnerName()\n\n useEffect(() => {\n    if (winner) {\n        setStatus(winner)\n    }  \n    if (step === 9 && !winner) {\n        setStatus('draw')\n    }  \n    if (winner === player1) {\n        setScore1((prevState) => prevState + 1)\n    } \n    if (winner === player2) {\n        setScore2((prevState) => prevState + 1)\n    }   \n }, [winner, step, player1, player2]) \n\nconst onClick = (e) => {\n    let i = +e.target.id\n    setStep((prevState) => prevState + 1)\n\n    if (squares[i] === null) {\n        setSquares((prevState) => {\n            prevState[i] = xO\n            setIsXnext(!isXnext)\n            return [...prevState] \n        })\n    } \n}\n\nfunction getWinnerName() {\n        if(calculateWinner(squares) !== null) {\n            return calculateWinner(squares) === 'X' ? player1 : player2   \n        }\n        return null\n    }   \n\nfunction resetBoard() {\n    setSquares(Array(9).fill(null))\n    setIsXnext(true)\n    setStep(0)\n    setStatus('')\n}\n\nconst renderResult = () => {\n    if (status === '') return\n    return <div>\n            <h2>{status === 'draw' ? `${status.toUpperCase()}!` : `The winner is ${winner}`}</h2>\n            <button className='next-round-btn' onClick={resetBoard}>New round</button>\n        </div>\n}\n\nconst renderCrossLine = () => {\n    const strikePatterns = ['row-1', 'row-2', 'row-3', 'col-1', 'col-2', 'col-3', 'd-1', 'd-2']\n    return <div className={strikePatterns[idxPattern]}></div>\n}\n    return (\n        <div className='game'>\n        <div className='game-field' onClick={onClick}>\n            {squares.map((el, i) => {\n                let disabled = winner || status === 'draw' ? true : false\n                return <button disabled={disabled} key={i} id={i} className='square'>{el}</button>\n            })}\n            {winner ? renderCrossLine() : null}\n        </div>\n        <div className='game-score'>\n            <div className='score'>Score</div>\n             <div> {player1} – Score: {score1} </div>\n             <div> {player2} – Score: {score2} </div>\n             {renderResult()} \n        </div>\n        </div>\n    )\n}\n\n","import React, { useState } from 'react';\nimport Modal from '../Modal'\nimport Game from '../Game'\n\nexport default function App() {\n\nconst [players, setPlayers] = useState(['Player 1', 'Player 2'])\nconst [modalStatus, setModalStatus] = useState(true)\n \n  return (\n    <>\n    {modalStatus ? \n    <Modal \n    setPlayers={(p1, p2) => setPlayers([p1, p2])} \n    setModalStatus={() => setModalStatus(false)}\n    /> \n    : null}\n    <Game players={players}/> \n    </>\n  )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}